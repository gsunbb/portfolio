<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ÌïôÍ∏â ÏûÑÏõê ÏÑ†Í±∞ Í∞úÌëú ÏãúÏä§ÌÖú</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <style>
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .tab-button {
            transition: all 0.3s ease;
            border-radius: 20px;
            padding: 12px 24px;
            margin: 0 8px;
            background: rgba(255, 255, 255, 0.2);
            backdrop-filter: blur(10px);
            border: 2px solid rgba(255, 255, 255, 0.3);
        }

        .tab-button.active {
            background: rgba(255, 255, 255, 0.9);
            color: #4a5568;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        .tab-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
        }

        .candidate-card {
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            border-radius: 20px;
            padding: 20px;
            margin: 15px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            cursor: pointer;
            border: 3px solid rgba(255, 255, 255, 0.3);
        }

        .candidate-card.male {
            background: linear-gradient(135deg, #4ecdc4 0%, #44a08d 100%);
        }

        .candidate-card.female {
            background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
        }

        .candidate-card:hover {
            transform: translateY(-5px) scale(1.02);
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.2);
        }

        .candidate-card:active {
            transform: translateY(-2px) scale(0.98);
        }

        .number-badge {
            background: rgba(255, 255, 255, 0.9);
            color: #4a5568;
            width: 50px;
            height: 50px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            font-size: 24px;
            margin: 0 auto 15px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        .vote-count {
            font-size: 2.5rem;
            font-weight: bold;
            color: white;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
            margin: 10px 0;
        }

        .candidate-name {
            font-size: 1.8rem;
            font-weight: bold;
            color: white;
            text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);
            margin: 10px 0;
        }

        .count-button {
            background: rgba(255, 255, 255, 0.9);
            color: #4a5568;
            border: none;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            font-size: 20px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.2s ease;
            margin: 0 5px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        .count-button:hover {
            transform: scale(1.1);
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.2);
        }

        .count-button:active {
            transform: scale(0.95);
        }

        .form-container {
            background: rgba(255, 255, 255, 0.9);
            border-radius: 20px;
            padding: 30px;
            margin: 20px;
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.1);
            backdrop-filter: blur(10px);
        }

        .input-field {
            border: 2px solid #e2e8f0;
            border-radius: 15px;
            padding: 12px 20px;
            font-size: 16px;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.8);
        }

        .input-field:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
            outline: none;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            border-radius: 15px;
            padding: 12px 30px;
            font-size: 16px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
        }

        .btn-danger {
            background: linear-gradient(135deg, #ff6b6b 0%, #ee5a52 100%);
            color: white;
            border: none;
            border-radius: 15px;
            padding: 8px 20px;
            font-size: 14px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        .btn-danger:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
        }

        .status-card {
            background: rgba(255, 255, 255, 0.9);
            border-radius: 20px;
            padding: 25px;
            margin: 15px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            text-align: center;
        }

        .status-good {
            border-left: 8px solid #48bb78;
        }

        .status-warning {
            border-left: 8px solid #ed8936;
        }

        .status-error {
            border-left: 8px solid #e53e3e;
        }

        .invalid-votes-container {
            background: rgba(255, 255, 255, 0.9);
            border-radius: 20px;
            padding: 25px;
            margin: 20px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        .invalid-vote-card {
            background: linear-gradient(135deg, #ffeaa7 0%, #fab1a0 100%);
            border-radius: 15px;
            padding: 20px;
            margin: 10px 0;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); }
        }

        .pulse-animation {
            animation: pulse 0.3s ease-in-out;
        }

        .checkbox-custom {
            appearance: none;
            width: 20px;
            height: 20px;
            border: 2px solid #667eea;
            border-radius: 4px;
            position: relative;
            cursor: pointer;
        }

        .checkbox-custom:checked {
            background: #667eea;
        }

        .checkbox-custom:checked::after {
            content: '‚úì';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            color: white;
            font-size: 14px;
            font-weight: bold;
        }

        .sort-container {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin: 20px 0;
        }

        .sort-button {
            background: rgba(255, 255, 255, 0.8);
            border: 2px solid #667eea;
            border-radius: 20px;
            padding: 8px 16px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: bold;
        }

        .sort-button:hover {
            background: #667eea;
            color: white;
            transform: translateY(-2px);
        }

        .sort-button.active {
            background: #667eea;
            color: white;
        }
    </style>
</head>
<body class="bg-gradient-to-br from-blue-400 via-purple-500 to-pink-500">
    <div class="container mx-auto px-4 py-8">
        <div class="text-center mb-8">
            <h1 class="text-4xl font-bold text-white mb-2 drop-shadow-lg">üó≥Ô∏è ÌïôÍ∏â ÏûÑÏõê ÏÑ†Í±∞ Í∞úÌëú ÏãúÏä§ÌÖú</h1>
            <p class="text-white text-lg opacity-90">Ï≤¥Í≥ÑÏ†ÅÏù¥Í≥† Ï†ïÌôïÌïú Í∞úÌëúÎ•º ÏúÑÌïú ÏãúÏä§ÌÖú</p>
        </div>

        <!-- ÌÉ≠ ÎÑ§ÎπÑÍ≤åÏù¥ÏÖò -->
        <div class="flex justify-center mb-8">
            <button class="tab-button active text-white font-bold" onclick="showTab('setup')">
                üõ†Ô∏è ÏÑ†Í±∞ ÏÑ§Ï†ï
            </button>
            <button class="tab-button text-white font-bold" onclick="showTab('counting')">
                üó≥Ô∏è Í∞úÌëú
            </button>
            <button class="tab-button text-white font-bold" onclick="showTab('data')">
                üìä Îç∞Ïù¥ÌÑ∞
            </button>
        </div>

        <!-- ÏÑ†Í±∞ ÏÑ§Ï†ï ÌÉ≠ -->
        <div id="setup-tab" class="tab-content">
            <div class="form-container">
                <h2 class="text-2xl font-bold mb-6 text-gray-800">üìã ÏÑ†Í±∞ ÏÑ§Ï†ï</h2>
                
                <!-- ÏÑ†Í±∞ Î∞©Ïãù ÏÑ†ÌÉù -->
                <div class="mb-6">
                    <label class="block text-lg font-semibold mb-3 text-gray-700">ÏÑ†Í±∞ Î∞©Ïãù ÏÑ†ÌÉù</label>
                    <div class="flex space-x-4">
                        <label class="flex items-center space-x-2 cursor-pointer">
                            <input type="radio" name="election-type" value="gender-separate" checked onchange="updateElectionType()">
                            <span class="text-gray-700">ÎÇ®ÎÖÄ Íµ¨Î∂Ñ ÏÑ†Í±∞ (1Ïù∏Îãπ 2Ìëú)</span>
                        </label>
                        <label class="flex items-center space-x-2 cursor-pointer">
                            <input type="radio" name="election-type" value="unified" onchange="updateElectionType()">
                            <span class="text-gray-700">ÌÜµÌï© ÏÑ†Í±∞ (1Ïù∏Îãπ 1Ìëú)</span>
                        </label>
                    </div>
                </div>

                <!-- Ìà¨ÌëúÏûê Ïàò ÏûÖÎ†• -->
                <div class="mb-6">
                    <label class="block text-lg font-semibold mb-3 text-gray-700">Ï¥ù Ìà¨ÌëúÏûê Ïàò</label>
                    <input type="number" id="voter-count" class="input-field w-full" placeholder="Ìà¨ÌëúÏûê ÏàòÎ•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî" min="1" onchange="updateVoterCount()">
                </div>

                <!-- ÌõÑÎ≥¥Ïûê Îì±Î°ù -->
                <div class="mb-6">
                    <h3 class="text-xl font-bold mb-4 text-gray-800">ÌõÑÎ≥¥Ïûê Îì±Î°ù</h3>
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-4">
                        <input type="text" id="candidate-number" class="input-field" placeholder="Í∏∞Ìò∏ (Ïòà: 1)">
                        <input type="text" id="candidate-name" class="input-field" placeholder="ÌõÑÎ≥¥Ïûê Ïù¥Î¶Ñ">
                        <select id="candidate-gender" class="input-field">
                            <option value="">ÏÑ±Î≥Ñ ÏÑ†ÌÉù</option>
                            <option value="male">ÎÇ®Ïûê</option>
                            <option value="female">Ïó¨Ïûê</option>
                        </select>
                    </div>
                    <button class="btn-primary w-full" onclick="addCandidate()">ÌõÑÎ≥¥Ïûê Ï∂îÍ∞Ä</button>
                </div>

                <!-- Îì±Î°ùÎêú ÌõÑÎ≥¥Ïûê Î™©Î°ù -->
                <div id="candidate-list" class="mb-6">
                    <h3 class="text-xl font-bold mb-4 text-gray-800">Îì±Î°ùÎêú ÌõÑÎ≥¥Ïûê</h3>
                    <div id="setup-candidates" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4"></div>
                </div>
            </div>
        </div>

        <!-- Í∞úÌëú ÌÉ≠ -->
        <div id="counting-tab" class="tab-content hidden">
            <div class="mb-6">
                <div class="form-container">
                    <h2 class="text-2xl font-bold mb-6 text-gray-800">üó≥Ô∏è Í∞úÌëú ÌòÑÌô©</h2>
                    
                    <!-- Ï†ïÎ†¨ ÏòµÏÖò -->
                    <div class="sort-container">
                        <button class="sort-button active" onclick="sortCandidates('number')">Í∏∞Ìò∏Ïàú</button>
                        <button class="sort-button" onclick="sortCandidates('name')">Ïù¥Î¶ÑÏàú</button>
                        <button class="sort-button" onclick="sortCandidates('gender')">ÏÑ±Î≥ÑÏàú</button>
                        <button class="sort-button" onclick="sortCandidates('votes')">ÎìùÌëúÏàú</button>
                    </div>
                </div>
            </div>

            <!-- ÌõÑÎ≥¥Ïûê Í∞úÌëú Ïπ¥Îìú -->
            <div id="counting-candidates" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"></div>

            <!-- Î¨¥Ìö®Ìëú Í¥ÄÎ¶¨ -->
            <div class="invalid-votes-container">
                <h3 class="text-xl font-bold mb-4 text-gray-800">‚ùå Î¨¥Ìö®Ìëú ÏßëÍ≥Ñ</h3>
                <div id="invalid-votes-section"></div>
            </div>

            <!-- ÏßëÍ≥Ñ ÌòÑÌô© -->
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                <div class="status-card">
                    <h4 class="font-bold text-gray-700 mb-2">Ï¥ù Ìà¨ÌëúÏûê Ïàò</h4>
                    <p class="text-2xl font-bold text-blue-600" id="total-voters">0</p>
                </div>
                <div class="status-card">
                    <h4 class="font-bold text-gray-700 mb-2">Ï¥ù Ìà¨Ìëú Í∞ÄÎä• Ïàò</h4>
                    <p class="text-2xl font-bold text-green-600" id="total-possible-votes">0</p>
                </div>
                <div class="status-card">
                    <h4 class="font-bold text-gray-700 mb-2">ÌòÑÏû¨ ÏßëÍ≥Ñ Ïàò</h4>
                    <p class="text-2xl font-bold text-purple-600" id="current-count">0</p>
                </div>
                <div class="status-card" id="status-indicator">
                    <h4 class="font-bold text-gray-700 mb-2">ÏßëÍ≥Ñ ÏÉÅÌÉú</h4>
                    <p class="text-2xl font-bold" id="status-text">‚è≥ ÏßëÍ≥Ñ Ï§ë</p>
                </div>
            </div>
        </div>

        <!-- Îç∞Ïù¥ÌÑ∞ ÌÉ≠ -->
        <div id="data-tab" class="tab-content hidden">
            <div class="form-container">
                <h2 class="text-2xl font-bold mb-6 text-gray-800">üìä Îç∞Ïù¥ÌÑ∞ Í¥ÄÎ¶¨</h2>
                
                <div class="space-y-6">
                    <div class="text-center">
                        <button class="btn-primary text-xl px-8 py-4" onclick="exportToExcel()">
                            üíæ ÏóëÏÖÄÎ°ú ÎÇ¥Î≥¥ÎÇ¥Í∏∞
                        </button>
                        <p class="text-gray-600 mt-2">ÌòÑÏû¨ Í∞úÌëú Í≤∞Í≥ºÎ•º ÏóëÏÖÄ ÌååÏùºÎ°ú Îã§Ïö¥Î°úÎìúÌï©ÎãàÎã§.</p>
                    </div>
                    
                    <hr class="my-8">
                    
                    <div class="text-center">
                        <button class="btn-danger text-xl px-8 py-4" onclick="clearAllData()">
                            üóëÔ∏è Î™®Îì† Îç∞Ïù¥ÌÑ∞ ÏßÄÏö∞Í∏∞
                        </button>
                        <p class="text-gray-600 mt-2">Î™®Îì† ÌõÑÎ≥¥Ïûê Ï†ïÎ≥¥ÏôÄ Í∞úÌëú Í≤∞Í≥ºÎ•º Ï¥àÍ∏∞ÌôîÌï©ÎãàÎã§.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        let candidates = [];
        let voterCount = 0;
        let electionType = 'gender-separate';
        let invalidVotes = {
            male: 0,
            female: 0,
            total: 0
        };
        let currentSort = 'number';

        function showTab(tabName) {
            // Î™®Îì† ÌÉ≠ Ïà®Í∏∞Í∏∞
            document.querySelectorAll('.tab-content').forEach(tab => {
                tab.classList.add('hidden');
            });
            
            // Î™®Îì† ÌÉ≠ Î≤ÑÌäº ÎπÑÌôúÏÑ±Ìôî
            document.querySelectorAll('.tab-button').forEach(btn => {
                btn.classList.remove('active');
            });
            
            // ÏÑ†ÌÉùÎêú ÌÉ≠ Î≥¥Ïù¥Í∏∞
            document.getElementById(tabName + '-tab').classList.remove('hidden');
            
            // ÏÑ†ÌÉùÎêú ÌÉ≠ Î≤ÑÌäº ÌôúÏÑ±Ìôî
            event.target.classList.add('active');
            
            // Í∞úÌëú ÌÉ≠ÏúºÎ°ú Ïù¥ÎèôÌï† Îïå Î†åÎçîÎßÅ
            if (tabName === 'counting') {
                renderCountingCandidates();
                renderInvalidVotes();
                updateStatus();
            }
        }

        function updateElectionType() {
            const selectedType = document.querySelector('input[name="election-type"]:checked').value;
            electionType = selectedType;
            renderInvalidVotes();
            updateStatus();
        }

        function updateVoterCount() {
            voterCount = parseInt(document.getElementById('voter-count').value) || 0;
            updateStatus();
        }

        function addCandidate() {
            const number = document.getElementById('candidate-number').value.trim();
            const name = document.getElementById('candidate-name').value.trim();
            const gender = document.getElementById('candidate-gender').value;

            if (!number || !name || !gender) {
                alert('Î™®Îì† ÌïÑÎìúÎ•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.');
                return;
            }

            const candidate = {
                id: Date.now(),
                number: number,
                name: name,
                gender: gender,
                votes: 0
            };

            candidates.push(candidate);
            
            // ÏûÖÎ†• ÌïÑÎìú Ï¥àÍ∏∞Ìôî
            document.getElementById('candidate-number').value = '';
            document.getElementById('candidate-name').value = '';
            document.getElementById('candidate-gender').value = '';

            renderSetupCandidates();
        }

        function removeCandidate(id) {
            candidates = candidates.filter(candidate => candidate.id !== id);
            renderSetupCandidates();
        }

        function renderSetupCandidates() {
            const container = document.getElementById('setup-candidates');
            container.innerHTML = '';

            candidates.forEach(candidate => {
                const card = document.createElement('div');
                card.className = 'bg-white rounded-lg p-4 shadow-lg border-2 border-gray-200';
                card.innerHTML = `
                    <div class="flex justify-between items-center">
                        <div>
                            <span class="inline-block bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-bold">${candidate.number}Î≤à</span>
                            <span class="ml-2 text-lg font-semibold">${candidate.name}</span>
                            <span class="ml-2 text-sm text-gray-600">(${candidate.gender === 'male' ? 'ÎÇ®Ïûê' : 'Ïó¨Ïûê'})</span>
                        </div>
                        <button class="btn-danger" onclick="removeCandidate(${candidate.id})">ÏÇ≠Ï†ú</button>
                    </div>
                `;
                container.appendChild(card);
            });
        }

        function renderCountingCandidates() {
            const container = document.getElementById('counting-candidates');
            container.innerHTML = '';

            // ÌòÑÏû¨ Ï†ïÎ†¨ Í∏∞Ï§ÄÏóê Îî∞Îùº ÌõÑÎ≥¥Ïûê Ï†ïÎ†¨
            const sortedCandidates = [...candidates].sort((a, b) => {
                switch (currentSort) {
                    case 'number':
                        return parseInt(a.number) - parseInt(b.number) || (a.gender === 'male' ? -1 : 1);
                    case 'name':
                        return a.name.localeCompare(b.name);
                    case 'gender':
                        return (a.gender === 'male' ? 0 : 1) - (b.gender === 'male' ? 0 : 1) || parseInt(a.number) - parseInt(b.number);
                    case 'votes':
                        return b.votes - a.votes;
                    default:
                        return 0;
                }
            });

            sortedCandidates.forEach(candidate => {
                const card = document.createElement('div');
                card.className = `candidate-card ${candidate.gender}`;
                card.onclick = () => incrementVote(candidate.id);
                
                card.innerHTML = `
                    <div class="number-badge">${candidate.number}</div>
                    <div class="candidate-name text-center">${candidate.name}</div>
                    <div class="text-center text-white text-sm opacity-90 mb-3">${candidate.gender === 'male' ? 'ÎÇ®Ïûê' : 'Ïó¨Ïûê'}</div>
                    <div class="vote-count text-center">${candidate.votes} Ìëú</div>
                    <div class="flex justify-center space-x-2 mt-4">
                        <button class="count-button" onclick="event.stopPropagation(); decrementVote(${candidate.id})">-</button>
                        <button class="count-button" onclick="event.stopPropagation(); incrementVote(${candidate.id})">+</button>
                    </div>
                `;
                
                container.appendChild(card);
            });
        }

        function renderInvalidVotes() {
            const container = document.getElementById('invalid-votes-section');
            container.innerHTML = '';

            if (electionType === 'gender-separate') {
                container.innerHTML = `
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div class="invalid-vote-card">
                            <h4 class="font-bold text-gray-800 mb-3">ÎÇ®Ïûê Î¨¥Ìö®Ìëú</h4>
                            <div class="flex items-center justify-center space-x-4">
                                <button class="count-button" onclick="changeInvalidVotes('male', -1)">-</button>
                                <span class="text-2xl font-bold text-gray-800">${invalidVotes.male} Ìëú</span>
                                <button class="count-button" onclick="changeInvalidVotes('male', 1)">+</button>
                            </div>
                        </div>
                        <div class="invalid-vote-card">
                            <h4 class="font-bold text-gray-800 mb-3">Ïó¨Ïûê Î¨¥Ìö®Ìëú</h4>
                            <div class="flex items-center justify-center space-x-4">
                                <button class="count-button" onclick="changeInvalidVotes('female', -1)">-</button>
                                <span class="text-2xl font-bold text-gray-800">${invalidVotes.female} Ìëú</span>
                                <button class="count-button" onclick="changeInvalidVotes('female', 1)">+</button>
                            </div>
                        </div>
                    </div>
                `;
            } else {
                container.innerHTML = `
                    <div class="invalid-vote-card">
                        <h4 class="font-bold text-gray-800 mb-3">Ï†ÑÏ≤¥ Î¨¥Ìö®Ìëú</h4>
                        <div class="flex items-center justify-center space-x-4">
                            <button class="count-button" onclick="changeInvalidVotes('total', -1)">-</button>
                            <span class="text-2xl font-bold text-gray-800">${invalidVotes.total} Ìëú</span>
                            <button class="count-button" onclick="changeInvalidVotes('total', 1)">+</button>
                        </div>
                    </div>
                `;
            }
        }

        function incrementVote(candidateId) {
            const candidate = candidates.find(c => c.id === candidateId);
            if (candidate) {
                candidate.votes++;
                
                // Ïï†ÎãàÎ©îÏù¥ÏÖò Ìö®Í≥º
                const card = event.currentTarget;
                card.classList.add('pulse-animation');
                setTimeout(() => card.classList.remove('pulse-animation'), 300);
                
                renderCountingCandidates();
                updateStatus();
            }
        }

        function decrementVote(candidateId) {
            const candidate = candidates.find(c => c.id === candidateId);
            if (candidate && candidate.votes > 0) {
                candidate.votes--;
                renderCountingCandidates();
                updateStatus();
            }
        }

        function changeInvalidVotes(type, change) {
            if (type === 'male' && invalidVotes.male + change >= 0) {
                invalidVotes.male += change;
            } else if (type === 'female' && invalidVotes.female + change >= 0) {
                invalidVotes.female += change;
            } else if (type === 'total' && invalidVotes.total + change >= 0) {
                invalidVotes.total += change;
            }
            renderInvalidVotes();
            updateStatus();
        }

        function sortCandidates(sortType) {
            currentSort = sortType;
            
            // Ï†ïÎ†¨ Î≤ÑÌäº ÌôúÏÑ±Ìôî ÏÉÅÌÉú Î≥ÄÍ≤Ω
            document.querySelectorAll('.sort-button').forEach(btn => {
                btn.classList.remove('active');
            });
            event.target.classList.add('active');
            
            renderCountingCandidates();
        }

        function updateStatus() {
            const totalVoters = voterCount;
            const totalPossibleVotes = electionType === 'gender-separate' ? totalVoters * 2 : totalVoters;
            
            let currentCount = 0;
            
            if (electionType === 'gender-separate') {
                const maleVotes = candidates.filter(c => c.gender === 'male').reduce((sum, c) => sum + c.votes, 0);
                const femaleVotes = candidates.filter(c => c.gender === 'female').reduce((sum, c) => sum + c.votes, 0);
                currentCount = maleVotes + femaleVotes + invalidVotes.male + invalidVotes.female;
            } else {
                const totalVotes = candidates.reduce((sum, c) => sum + c.votes, 0);
                currentCount = totalVotes + invalidVotes.total;
            }

            document.getElementById('total-voters').textContent = totalVoters;
            document.getElementById('total-possible-votes').textContent = totalPossibleVotes;
            document.getElementById('current-count').textContent = currentCount;

            const statusIndicator = document.getElementById('status-indicator');
            const statusText = document.getElementById('status-text');

            if (totalPossibleVotes === 0) {
                statusIndicator.className = 'status-card';
                statusText.textContent = '‚è≥ ÏßëÍ≥Ñ Ï§ë';
                statusText.className = 'text-2xl font-bold text-gray-600';
            } else if (currentCount === totalPossibleVotes) {
                statusIndicator.className = 'status-card status-good';
                statusText.textContent = '‚úÖ ÏßëÍ≥Ñ ÏôÑÎ£å';
                statusText.className = 'text-2xl font-bold text-green-600';
            } else if (currentCount > totalPossibleVotes) {
                statusIndicator.className = 'status-card status-error';
                statusText.textContent = '‚ùå ÏßëÍ≥Ñ Ï¥àÍ≥º';
                statusText.className = 'text-2xl font-bold text-red-600';
            } else {
                statusIndicator.className = 'status-card status-warning';
                statusText.textContent = '‚è≥ ÏßëÍ≥Ñ Ï§ë';
                statusText.className = 'text-2xl font-bold text-yellow-600';
            }
        }

        function exportToExcel() {
            if (candidates.length === 0) {
                alert('Îì±Î°ùÎêú ÌõÑÎ≥¥ÏûêÍ∞Ä ÏóÜÏäµÎãàÎã§.');
                return;
            }

            // UTF-8 BOM Ï∂îÍ∞Ä
            const BOM = '\uFEFF';
            let csv = BOM + 'ÌïôÍ∏â ÏûÑÏõê ÏÑ†Í±∞ Í∞úÌëú Í≤∞Í≥º\n\n';
            
            // ÏÑ†Í±∞ Ï†ïÎ≥¥
            csv += 'ÏÑ†Í±∞ Î∞©Ïãù,' + (electionType === 'gender-separate' ? 'ÎÇ®ÎÖÄ Íµ¨Î∂Ñ ÏÑ†Í±∞' : 'ÌÜµÌï© ÏÑ†Í±∞') + '\n';
            csv += 'Ï¥ù Ìà¨ÌëúÏûê Ïàò,' + voterCount + '\n';
            csv += 'Í∞úÌëú ÏùºÏãú,' + new Date().toLocaleString('ko-KR') + '\n\n';
            
            // ÌõÑÎ≥¥Ïûê Í≤∞Í≥º
            csv += 'ÌõÑÎ≥¥Ïûê Í≤∞Í≥º\n';
            csv += 'Í∏∞Ìò∏,Ïù¥Î¶Ñ,ÏÑ±Î≥Ñ,ÎìùÌëúÏàò\n';
            
            candidates.forEach(candidate => {
                csv += `${candidate.number},${candidate.name},${candidate.gender === 'male' ? 'ÎÇ®Ïûê' : 'Ïó¨Ïûê'},${candidate.votes}\n`;
            });
            
            // Î¨¥Ìö®Ìëú Ï†ïÎ≥¥
            csv += '\nÎ¨¥Ìö®Ìëú ÏßëÍ≥Ñ\n';
            if (electionType === 'gender-separate') {
                csv += 'ÎÇ®Ïûê Î¨¥Ìö®Ìëú,' + invalidVotes.male + '\n';
                csv += 'Ïó¨Ïûê Î¨¥Ìö®Ìëú,' + invalidVotes.female + '\n';
                csv += 'Ï†ÑÏ≤¥ Î¨¥Ìö®Ìëú,' + (invalidVotes.male + invalidVotes.female) + '\n';
            } else {
                csv += 'Ï†ÑÏ≤¥ Î¨¥Ìö®Ìëú,' + invalidVotes.total + '\n';
            }
            
            // ÏßëÍ≥Ñ ÌòÑÌô©
            csv += '\nÏßëÍ≥Ñ ÌòÑÌô©\n';
            csv += 'Ï¥ù Ìà¨ÌëúÏûê Ïàò,' + voterCount + '\n';
            csv += 'Ï¥ù Ìà¨Ìëú Í∞ÄÎä• Ïàò,' + (electionType === 'gender-separate' ? voterCount * 2 : voterCount) + '\n';
            
            let currentCount = 0;
            if (electionType === 'gender-separate') {
                currentCount = candidates.reduce((sum, c) => sum + c.votes, 0) + invalidVotes.male + invalidVotes.female;
            } else {
                currentCount = candidates.reduce((sum, c) => sum + c.votes, 0) + invalidVotes.total;
            }
            csv += 'ÌòÑÏû¨ ÏßëÍ≥Ñ Ïàò,' + currentCount + '\n';

            // ÌååÏùº Îã§Ïö¥Î°úÎìú
            const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });
            const link = document.createElement('a');
            const url = URL.createObjectURL(blob);
            link.setAttribute('href', url);
            link.setAttribute('download', 'ÌïôÍ∏â_ÏûÑÏõê_ÏÑ†Í±∞_Í∞úÌëú_Í≤∞Í≥º.csv');
            link.style.visibility = 'hidden';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }

        function clearAllData() {
            if (confirm('Î™®Îì† Îç∞Ïù¥ÌÑ∞Î•º ÏÇ≠Ï†úÌïòÏãúÍ≤†ÏäµÎãàÍπå? Ïù¥ ÏûëÏóÖÏùÄ ÎêòÎèåÎ¶¥ Ïàò ÏóÜÏäµÎãàÎã§.')) {
                candidates = [];
                voterCount = 0;
                invalidVotes = { male: 0, female: 0, total: 0 };
                electionType = 'gender-separate';
                
                document.getElementById('voter-count').value = '';
                document.querySelector('input[name="election-type"][value="gender-separate"]').checked = true;
                
                renderSetupCandidates();
                renderCountingCandidates();
                renderInvalidVotes();
                updateStatus();
                
                alert('Î™®Îì† Îç∞Ïù¥ÌÑ∞Í∞Ä ÏÇ≠Ï†úÎêòÏóàÏäµÎãàÎã§.');
            }
        }

        // Ï¥àÍ∏∞ Î†åÎçîÎßÅ
        document.addEventListener('DOMContentLoaded', function() {
            renderSetupCandidates();
            renderInvalidVotes();
            updateStatus();
        });
    </script>
</body>
</html>
    <script id="html_badge_script1">
        window.__genspark_remove_badge_link = "https://www.genspark.ai/api/html_badge/" +
            "remove_badge?token=To%2FBnjzloZ3UfQdcSaYfDgS2lOVypNBEFIsQpOtFv4nfPXZqtVVobgs08id0uZXbpKltzZzhCLF1ZD9ja2mMap4NhOhw5%2BS8AaxqZggUOXyhDT20JEJA4AcqE%2BxfIXJ8P14T7ZARh%2FBFRa7fAnID3FIz3aM28PCdt4vlhbAk9BeRGJsXGOAln2hiNe6aWxVaDAlq3zhArGWVfOzqPdBob%2BpldWFCkwqG1IIoHTp4sGLyMEexPySPCKZYocvqIDcDC9sbRT%2BJPXl3LUMgkJZZkW8NGBDSZi42wmRp7D9BrEXkKIO3IJuvjPIMDbGxV%2FWxEpe2z1tql0Wv2J%2BnNsXO2jidIQvD7wSbzqVBhP1voy3yJvrQk%2FmkB5SSlDsvJfhCqPBRXxIG8rCbPe6p%2BFzPuh3kE6wsXYZ%2Fm5w2TJGYvlubd4hBKsdGUcabyWsOgMSbBM%2FrZnMqUl11Odt12lC5WTAXoCoes0ioJGH2wZU0GIP36w7MJWfDuoH%2Bi2UYt%2FlTtf8YmsONMed6pCPIgTQ4CrPrpJC3NioIgYGDHzcjHVc%3D";
        window.__genspark_locale = "ko-KR";
        window.__genspark_token = "To/BnjzloZ3UfQdcSaYfDgS2lOVypNBEFIsQpOtFv4nfPXZqtVVobgs08id0uZXbpKltzZzhCLF1ZD9ja2mMap4NhOhw5+S8AaxqZggUOXyhDT20JEJA4AcqE+xfIXJ8P14T7ZARh/BFRa7fAnID3FIz3aM28PCdt4vlhbAk9BeRGJsXGOAln2hiNe6aWxVaDAlq3zhArGWVfOzqPdBob+pldWFCkwqG1IIoHTp4sGLyMEexPySPCKZYocvqIDcDC9sbRT+JPXl3LUMgkJZZkW8NGBDSZi42wmRp7D9BrEXkKIO3IJuvjPIMDbGxV/WxEpe2z1tql0Wv2J+nNsXO2jidIQvD7wSbzqVBhP1voy3yJvrQk/mkB5SSlDsvJfhCqPBRXxIG8rCbPe6p+FzPuh3kE6wsXYZ/m5w2TJGYvlubd4hBKsdGUcabyWsOgMSbBM/rZnMqUl11Odt12lC5WTAXoCoes0ioJGH2wZU0GIP36w7MJWfDuoH+i2UYt/lTtf8YmsONMed6pCPIgTQ4CrPrpJC3NioIgYGDHzcjHVc=";
    </script>
    
    <script id="html_notice_dialog_script" src="https://www.genspark.ai/notice_dialog.js"></script>
    
